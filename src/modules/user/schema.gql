type Query {
    users(
        userId: ID 
        pagination: Pagination = {}
        sort: UserSort = {}
    ): [User!]!
}

type Mutation{
    login(username:String! password:String!):AuthResponse!
    register(
        username:String!
        password:String!
        file:Upload!
    ):AuthResponse!
}


enum SortOptions {
    toLargest
    toSmallest
}

input Pagination {
    page: Int = 1
    limit: Int = 10
}

input UserSort {
    byName: SortOptions
    byTime: SortOptions
}

scalar Link
scalar DateTime
scalar Upload

type User {
    userId: ID!
    userImg: Link!
    username: String!
    userCreatedAt: DateTime!
}

type AuthResponse{
    status:Int!
    message:String!
    token:String
}